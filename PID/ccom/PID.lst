CCS PCH C Compiler, Version 5.015, 5967               04-ene.-21 18:45

               Filename:   D:\escuela\tesis\PID\ccom\PID.lst

               ROM used:   3184 bytes (10%)
                           Largest free fragment is 29584
               RAM used:   216 (14%) at main() level
                           231 (15%) worst case
               Stack used: 1 locations
               Stack size: 31

*
0000:  GOTO   05A2
....................  
.................... #include <18F4520.h> 
.................... //////////// Standard Header file for the PIC18F4520 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F4520 
0004:  MOVF   xD9,W
0006:  BTFSC  FD8.2
0008:  BRA    00EC
000A:  MOVWF  00
000C:  MOVF   xDD,W
000E:  BTFSC  FD8.2
0010:  BRA    00EC
0012:  ADDWF  00,F
0014:  BNC   001E
0016:  MOVLW  81
0018:  ADDWF  00,F
001A:  BC    00EC
001C:  BRA    0026
001E:  MOVLW  7F
0020:  SUBWF  00,F
0022:  BNC   00EC
0024:  BZ    00EC
0026:  MOVFF  DA,E1
002A:  MOVF   xDE,W
002C:  XORWF  xE1,F
002E:  BSF    xDA.7
0030:  BSF    xDE.7
0032:  MOVF   xDC,W
0034:  MULWF  xE0
0036:  MOVFF  FF4,E3
003A:  MOVF   xDB,W
003C:  MULWF  xDF
003E:  MOVFF  FF4,03
0042:  MOVFF  FF3,E2
0046:  MULWF  xE0
0048:  MOVF   FF3,W
004A:  ADDWF  xE3,F
004C:  MOVF   FF4,W
004E:  ADDWFC xE2,F
0050:  MOVLW  00
0052:  ADDWFC 03,F
0054:  MOVF   xDC,W
0056:  MULWF  xDF
0058:  MOVF   FF3,W
005A:  ADDWF  xE3,F
005C:  MOVF   FF4,W
005E:  ADDWFC xE2,F
0060:  MOVLW  00
0062:  CLRF   02
0064:  ADDWFC 03,F
0066:  ADDWFC 02,F
0068:  MOVF   xDA,W
006A:  MULWF  xE0
006C:  MOVF   FF3,W
006E:  ADDWF  xE2,F
0070:  MOVF   FF4,W
0072:  ADDWFC 03,F
0074:  MOVLW  00
0076:  ADDWFC 02,F
0078:  MOVF   xDA,W
007A:  MULWF  xDF
007C:  MOVF   FF3,W
007E:  ADDWF  03,F
0080:  MOVF   FF4,W
0082:  ADDWFC 02,F
0084:  MOVLW  00
0086:  CLRF   01
0088:  ADDWFC 01,F
008A:  MOVF   xDC,W
008C:  MULWF  xDE
008E:  MOVF   FF3,W
0090:  ADDWF  xE2,F
0092:  MOVF   FF4,W
0094:  ADDWFC 03,F
0096:  MOVLW  00
0098:  ADDWFC 02,F
009A:  ADDWFC 01,F
009C:  MOVF   xDB,W
009E:  MULWF  xDE
00A0:  MOVF   FF3,W
00A2:  ADDWF  03,F
00A4:  MOVF   FF4,W
00A6:  ADDWFC 02,F
00A8:  MOVLW  00
00AA:  ADDWFC 01,F
00AC:  MOVF   xDA,W
00AE:  MULWF  xDE
00B0:  MOVF   FF3,W
00B2:  ADDWF  02,F
00B4:  MOVF   FF4,W
00B6:  ADDWFC 01,F
00B8:  INCF   00,F
00BA:  BTFSC  01.7
00BC:  BRA    00C8
00BE:  RLCF   xE2,F
00C0:  RLCF   03,F
00C2:  RLCF   02,F
00C4:  RLCF   01,F
00C6:  DECF   00,F
00C8:  MOVLW  00
00CA:  BTFSS  xE2.7
00CC:  BRA    00E2
00CE:  INCF   03,F
00D0:  ADDWFC 02,F
00D2:  ADDWFC 01,F
00D4:  MOVF   01,W
00D6:  BNZ   00E2
00D8:  MOVF   02,W
00DA:  BNZ   00E2
00DC:  MOVF   03,W
00DE:  BNZ   00E2
00E0:  INCF   00,F
00E2:  BTFSC  xE1.7
00E4:  BSF    01.7
00E6:  BTFSS  xE1.7
00E8:  BCF    01.7
00EA:  BRA    00F4
00EC:  CLRF   00
00EE:  CLRF   01
00F0:  CLRF   02
00F2:  CLRF   03
00F4:  RETURN 0
00F6:  MOVLW  8E
00F8:  MOVWF  00
00FA:  MOVF   xD5,W
00FC:  SUBWF  00,F
00FE:  MOVFF  D6,02
0102:  MOVFF  D7,01
0106:  BSF    02.7
0108:  MOVF   00,F
010A:  BZ    011E
010C:  BCF    FD8.0
010E:  MOVF   02,F
0110:  BNZ   0116
0112:  MOVF   01,F
0114:  BZ    011E
0116:  RRCF   02,F
0118:  RRCF   01,F
011A:  DECFSZ 00,F
011C:  BRA    010C
011E:  BTFSS  xD6.7
0120:  BRA    012C
0122:  COMF   01,F
0124:  COMF   02,F
0126:  INCF   01,F
0128:  BTFSC  FD8.2
012A:  INCF   02,F
012C:  RETURN 0
012E:  MOVLW  8E
0130:  MOVWF  00
0132:  MOVFF  CE,01
0136:  MOVFF  CD,02
013A:  CLRF   03
013C:  MOVF   01,F
013E:  BNZ   0152
0140:  MOVFF  02,01
0144:  CLRF   02
0146:  MOVLW  08
0148:  SUBWF  00,F
014A:  MOVF   01,F
014C:  BNZ   0152
014E:  CLRF   00
0150:  BRA    0162
0152:  BCF    FD8.0
0154:  BTFSC  01.7
0156:  BRA    0160
0158:  RLCF   02,F
015A:  RLCF   01,F
015C:  DECF   00,F
015E:  BRA    0152
0160:  BCF    01.7
0162:  GOTO   0696 (RETURN)
0166:  MOVLW  80
0168:  BTFSC  FD8.1
016A:  XORWF  xDC,F
016C:  CLRF   xE1
016E:  CLRF   xE2
0170:  MOVFF  D8,E0
0174:  MOVF   xDC,W
0176:  XORWF  xE0,F
0178:  MOVF   xD7,W
017A:  BTFSC  FD8.2
017C:  BRA    0336
017E:  MOVWF  xDF
0180:  MOVWF  00
0182:  MOVF   xDB,W
0184:  BTFSC  FD8.2
0186:  BRA    0348
0188:  SUBWF  xDF,F
018A:  BTFSC  FD8.2
018C:  BRA    0290
018E:  BNC   020A
0190:  MOVFF  DC,E5
0194:  BSF    xE5.7
0196:  MOVFF  DD,E4
019A:  MOVFF  DE,E3
019E:  CLRF   xE2
01A0:  BCF    FD8.0
01A2:  RRCF   xE5,F
01A4:  RRCF   xE4,F
01A6:  RRCF   xE3,F
01A8:  RRCF   xE2,F
01AA:  DECFSZ xDF,F
01AC:  BRA    019E
01AE:  BTFSS  xE0.7
01B0:  BRA    01B8
01B2:  BSF    xE1.0
01B4:  BRA    0370
01B6:  BCF    xE1.0
01B8:  BCF    xDF.0
01BA:  BSF    xE1.4
01BC:  CLRF   FEA
01BE:  MOVLW  DA
01C0:  MOVWF  FE9
01C2:  BRA    0396
01C4:  BCF    xE1.4
01C6:  BTFSC  xE0.7
01C8:  BRA    01DE
01CA:  BTFSS  xDF.0
01CC:  BRA    01F4
01CE:  RRCF   xE5,F
01D0:  RRCF   xE4,F
01D2:  RRCF   xE3,F
01D4:  RRCF   xE2,F
01D6:  INCF   00,F
01D8:  BTFSC  FD8.2
01DA:  BRA    0366
01DC:  BRA    01F4
01DE:  BTFSC  xE5.7
01E0:  BRA    01FA
01E2:  BCF    FD8.0
01E4:  RLCF   xE2,F
01E6:  RLCF   xE3,F
01E8:  RLCF   xE4,F
01EA:  RLCF   xE5,F
01EC:  DECF   00,F
01EE:  BTFSC  FD8.2
01F0:  BRA    0366
01F2:  BRA    01DE
01F4:  BSF    xE1.6
01F6:  BRA    02CE
01F8:  BCF    xE1.6
01FA:  MOVFF  D8,E0
01FE:  BTFSS  xD8.7
0200:  BRA    0206
0202:  BSF    xE5.7
0204:  BRA    0358
0206:  BCF    xE5.7
0208:  BRA    0358
020A:  MOVFF  DB,DF
020E:  MOVFF  DB,00
0212:  MOVF   xD7,W
0214:  SUBWF  xDF,F
0216:  MOVFF  D8,E5
021A:  BSF    xE5.7
021C:  MOVFF  D9,E4
0220:  MOVFF  DA,E3
0224:  CLRF   xE2
0226:  BCF    FD8.0
0228:  RRCF   xE5,F
022A:  RRCF   xE4,F
022C:  RRCF   xE3,F
022E:  RRCF   xE2,F
0230:  DECFSZ xDF,F
0232:  BRA    0224
0234:  BTFSS  xE0.7
0236:  BRA    023E
0238:  BSF    xE1.1
023A:  BRA    0370
023C:  BCF    xE1.1
023E:  BCF    xDF.0
0240:  BSF    xE1.5
0242:  CLRF   FEA
0244:  MOVLW  DE
0246:  MOVWF  FE9
0248:  BRA    0396
024A:  BCF    xE1.5
024C:  BTFSC  xE0.7
024E:  BRA    0264
0250:  BTFSS  xDF.0
0252:  BRA    027A
0254:  RRCF   xE5,F
0256:  RRCF   xE4,F
0258:  RRCF   xE3,F
025A:  RRCF   xE2,F
025C:  INCF   00,F
025E:  BTFSC  FD8.2
0260:  BRA    0366
0262:  BRA    027A
0264:  BTFSC  xE5.7
0266:  BRA    0280
0268:  BCF    FD8.0
026A:  RLCF   xE2,F
026C:  RLCF   xE3,F
026E:  RLCF   xE4,F
0270:  RLCF   xE5,F
0272:  DECF   00,F
0274:  BTFSC  FD8.2
0276:  BRA    0366
0278:  BRA    0264
027A:  BSF    xE1.7
027C:  BRA    02CE
027E:  BCF    xE1.7
0280:  MOVFF  DC,E0
0284:  BTFSS  xDC.7
0286:  BRA    028C
0288:  BSF    xE5.7
028A:  BRA    0358
028C:  BCF    xE5.7
028E:  BRA    0358
0290:  MOVFF  DC,E5
0294:  BSF    xE5.7
0296:  MOVFF  DD,E4
029A:  MOVFF  DE,E3
029E:  BTFSS  xE0.7
02A0:  BRA    02AA
02A2:  BCF    xE5.7
02A4:  BSF    xE1.2
02A6:  BRA    0370
02A8:  BCF    xE1.2
02AA:  CLRF   xE2
02AC:  BCF    xDF.0
02AE:  CLRF   FEA
02B0:  MOVLW  DA
02B2:  MOVWF  FE9
02B4:  BRA    0396
02B6:  BTFSC  xE0.7
02B8:  BRA    02F2
02BA:  MOVFF  D8,E0
02BE:  BTFSS  xDF.0
02C0:  BRA    02CE
02C2:  RRCF   xE5,F
02C4:  RRCF   xE4,F
02C6:  RRCF   xE3,F
02C8:  RRCF   xE2,F
02CA:  INCF   00,F
02CC:  BZ    0366
02CE:  BTFSS  xE2.7
02D0:  BRA    02E8
02D2:  INCF   xE3,F
02D4:  BNZ   02E8
02D6:  INCF   xE4,F
02D8:  BNZ   02E8
02DA:  INCF   xE5,F
02DC:  BNZ   02E8
02DE:  RRCF   xE5,F
02E0:  RRCF   xE4,F
02E2:  RRCF   xE3,F
02E4:  INCF   00,F
02E6:  BZ    0366
02E8:  BTFSC  xE1.6
02EA:  BRA    01F8
02EC:  BTFSC  xE1.7
02EE:  BRA    027E
02F0:  BRA    032A
02F2:  MOVLW  80
02F4:  XORWF  xE5,F
02F6:  BTFSS  xE5.7
02F8:  BRA    0302
02FA:  BRA    0370
02FC:  MOVFF  DC,E0
0300:  BRA    0316
0302:  MOVFF  D8,E0
0306:  MOVF   xE5,F
0308:  BNZ   0316
030A:  MOVF   xE4,F
030C:  BNZ   0316
030E:  MOVF   xE3,F
0310:  BNZ   0316
0312:  CLRF   00
0314:  BRA    0358
0316:  BTFSC  xE5.7
0318:  BRA    032A
031A:  BCF    FD8.0
031C:  RLCF   xE2,F
031E:  RLCF   xE3,F
0320:  RLCF   xE4,F
0322:  RLCF   xE5,F
0324:  DECFSZ 00,F
0326:  BRA    0316
0328:  BRA    0366
032A:  BTFSS  xE0.7
032C:  BRA    0332
032E:  BSF    xE5.7
0330:  BRA    0358
0332:  BCF    xE5.7
0334:  BRA    0358
0336:  MOVFF  DB,00
033A:  MOVFF  DC,E5
033E:  MOVFF  DD,E4
0342:  MOVFF  DE,E3
0346:  BRA    0358
0348:  MOVFF  D7,00
034C:  MOVFF  D8,E5
0350:  MOVFF  D9,E4
0354:  MOVFF  DA,E3
0358:  MOVFF  E5,01
035C:  MOVFF  E4,02
0360:  MOVFF  E3,03
0364:  BRA    03CE
0366:  CLRF   00
0368:  CLRF   01
036A:  CLRF   02
036C:  CLRF   03
036E:  BRA    03CE
0370:  CLRF   xE2
0372:  COMF   xE3,F
0374:  COMF   xE4,F
0376:  COMF   xE5,F
0378:  COMF   xE2,F
037A:  INCF   xE2,F
037C:  BNZ   0388
037E:  INCF   xE3,F
0380:  BNZ   0388
0382:  INCF   xE4,F
0384:  BNZ   0388
0386:  INCF   xE5,F
0388:  BTFSC  xE1.0
038A:  BRA    01B6
038C:  BTFSC  xE1.1
038E:  BRA    023C
0390:  BTFSC  xE1.2
0392:  BRA    02A8
0394:  BRA    02FC
0396:  MOVF   FEF,W
0398:  ADDWF  xE3,F
039A:  BNC   03A6
039C:  INCF   xE4,F
039E:  BNZ   03A6
03A0:  INCF   xE5,F
03A2:  BTFSC  FD8.2
03A4:  BSF    xDF.0
03A6:  MOVF   FED,F
03A8:  MOVF   FEF,W
03AA:  ADDWF  xE4,F
03AC:  BNC   03B4
03AE:  INCF   xE5,F
03B0:  BTFSC  FD8.2
03B2:  BSF    xDF.0
03B4:  MOVF   FED,F
03B6:  MOVF   FEF,W
03B8:  BTFSC  FEF.7
03BA:  BRA    03BE
03BC:  XORLW  80
03BE:  ADDWF  xE5,F
03C0:  BTFSC  FD8.0
03C2:  BSF    xDF.0
03C4:  BTFSC  xE1.4
03C6:  BRA    01C4
03C8:  BTFSC  xE1.5
03CA:  BRA    024A
03CC:  BRA    02B6
03CE:  RETURN 0
03D0:  MOVF   xD1,W
03D2:  BTFSC  FD8.2
03D4:  BRA    0520
03D6:  MOVWF  xDD
03D8:  MOVF   xD5,W
03DA:  BTFSC  FD8.2
03DC:  BRA    0520
03DE:  SUBWF  xDD,F
03E0:  BNC   03EC
03E2:  MOVLW  7F
03E4:  ADDWF  xDD,F
03E6:  BTFSC  FD8.0
03E8:  BRA    0520
03EA:  BRA    03F8
03EC:  MOVLW  81
03EE:  SUBWF  xDD,F
03F0:  BTFSS  FD8.0
03F2:  BRA    0520
03F4:  BTFSC  FD8.2
03F6:  BRA    0520
03F8:  MOVFF  DD,00
03FC:  CLRF   01
03FE:  CLRF   02
0400:  CLRF   03
0402:  CLRF   xDC
0404:  MOVFF  D2,DB
0408:  BSF    xDB.7
040A:  MOVFF  D3,DA
040E:  MOVFF  D4,D9
0412:  MOVLW  19
0414:  MOVWF  xDD
0416:  MOVF   xD8,W
0418:  SUBWF  xD9,F
041A:  BC    0436
041C:  MOVLW  01
041E:  SUBWF  xDA,F
0420:  BC    0436
0422:  SUBWF  xDB,F
0424:  BC    0436
0426:  SUBWF  xDC,F
0428:  BC    0436
042A:  INCF   xDC,F
042C:  INCF   xDB,F
042E:  INCF   xDA,F
0430:  MOVF   xD8,W
0432:  ADDWF  xD9,F
0434:  BRA    0486
0436:  MOVF   xD7,W
0438:  SUBWF  xDA,F
043A:  BC    0460
043C:  MOVLW  01
043E:  SUBWF  xDB,F
0440:  BC    0460
0442:  SUBWF  xDC,F
0444:  BC    0460
0446:  INCF   xDC,F
0448:  INCF   xDB,F
044A:  MOVF   xD7,W
044C:  ADDWF  xDA,F
044E:  MOVF   xD8,W
0450:  ADDWF  xD9,F
0452:  BNC   0486
0454:  INCF   xDA,F
0456:  BNZ   0486
0458:  INCF   xDB,F
045A:  BNZ   0486
045C:  INCF   xDC,F
045E:  BRA    0486
0460:  MOVF   xD6,W
0462:  IORLW  80
0464:  SUBWF  xDB,F
0466:  BC    0484
0468:  MOVLW  01
046A:  SUBWF  xDC,F
046C:  BC    0484
046E:  INCF   xDC,F
0470:  MOVF   xD6,W
0472:  IORLW  80
0474:  ADDWF  xDB,F
0476:  MOVF   xD7,W
0478:  ADDWF  xDA,F
047A:  BNC   044E
047C:  INCF   xDB,F
047E:  BNZ   044E
0480:  INCF   xDC,F
0482:  BRA    044E
0484:  BSF    03.0
0486:  DECFSZ xDD,F
0488:  BRA    048C
048A:  BRA    04A2
048C:  BCF    FD8.0
048E:  RLCF   xD9,F
0490:  RLCF   xDA,F
0492:  RLCF   xDB,F
0494:  RLCF   xDC,F
0496:  BCF    FD8.0
0498:  RLCF   03,F
049A:  RLCF   02,F
049C:  RLCF   01,F
049E:  RLCF   xDE,F
04A0:  BRA    0416
04A2:  BTFSS  xDE.0
04A4:  BRA    04B2
04A6:  BCF    FD8.0
04A8:  RRCF   01,F
04AA:  RRCF   02,F
04AC:  RRCF   03,F
04AE:  RRCF   xDE,F
04B0:  BRA    04B6
04B2:  DECF   00,F
04B4:  BZ    0520
04B6:  BTFSC  xDE.7
04B8:  BRA    04F6
04BA:  BCF    FD8.0
04BC:  RLCF   xD9,F
04BE:  RLCF   xDA,F
04C0:  RLCF   xDB,F
04C2:  RLCF   xDC,F
04C4:  MOVF   xD8,W
04C6:  SUBWF  xD9,F
04C8:  BC    04D8
04CA:  MOVLW  01
04CC:  SUBWF  xDA,F
04CE:  BC    04D8
04D0:  SUBWF  xDB,F
04D2:  BC    04D8
04D4:  SUBWF  xDC,F
04D6:  BNC   050C
04D8:  MOVF   xD7,W
04DA:  SUBWF  xDA,F
04DC:  BC    04E8
04DE:  MOVLW  01
04E0:  SUBWF  xDB,F
04E2:  BC    04E8
04E4:  SUBWF  xDC,F
04E6:  BNC   050C
04E8:  MOVF   xD6,W
04EA:  IORLW  80
04EC:  SUBWF  xDB,F
04EE:  BC    04F6
04F0:  MOVLW  01
04F2:  SUBWF  xDC,F
04F4:  BNC   050C
04F6:  INCF   03,F
04F8:  BNZ   050C
04FA:  INCF   02,F
04FC:  BNZ   050C
04FE:  INCF   01,F
0500:  BNZ   050C
0502:  INCF   00,F
0504:  BZ    0520
0506:  RRCF   01,F
0508:  RRCF   02,F
050A:  RRCF   03,F
050C:  MOVFF  D2,DD
0510:  MOVF   xD6,W
0512:  XORWF  xDD,F
0514:  BTFSS  xDD.7
0516:  BRA    051C
0518:  BSF    01.7
051A:  BRA    0528
051C:  BCF    01.7
051E:  BRA    0528
0520:  CLRF   00
0522:  CLRF   01
0524:  CLRF   02
0526:  CLRF   03
0528:  RETURN 0
052A:  MOVFF  CC,D3
052E:  MOVF   xD0,W
0530:  XORWF  xD3,F
0532:  BTFSS  xD3.7
0534:  BRA    0540
0536:  BCF    FD8.2
0538:  BCF    FD8.0
053A:  BTFSC  xCC.7
053C:  BSF    FD8.0
053E:  BRA    059E
0540:  MOVFF  CC,D3
0544:  MOVFF  CF,D4
0548:  MOVF   xCB,W
054A:  SUBWF  xD4,F
054C:  BZ    055A
054E:  BTFSS  xD3.7
0550:  BRA    059E
0552:  MOVF   FD8,W
0554:  XORLW  01
0556:  MOVWF  FD8
0558:  BRA    059E
055A:  MOVFF  D0,D4
055E:  MOVF   xCC,W
0560:  SUBWF  xD4,F
0562:  BZ    0570
0564:  BTFSS  xD3.7
0566:  BRA    059E
0568:  MOVF   FD8,W
056A:  XORLW  01
056C:  MOVWF  FD8
056E:  BRA    059E
0570:  MOVFF  D1,D4
0574:  MOVF   xCD,W
0576:  SUBWF  xD4,F
0578:  BZ    0586
057A:  BTFSS  xD3.7
057C:  BRA    059E
057E:  MOVF   FD8,W
0580:  XORLW  01
0582:  MOVWF  FD8
0584:  BRA    059E
0586:  MOVFF  D2,D4
058A:  MOVF   xCE,W
058C:  SUBWF  xD4,F
058E:  BZ    059C
0590:  BTFSS  xD3.7
0592:  BRA    059E
0594:  MOVF   FD8,W
0596:  XORLW  01
0598:  MOVWF  FD8
059A:  BRA    059E
059C:  BCF    FD8.0
059E:  GOTO   0C3A (RETURN)
....................  
.................... #list 
....................  
.................... #device ADC=10  
.................... #fuses XT,NOWDT,NOPROTECT,NOLVP,PUT,BROWNOUT,INTRC_IO   
.................... #use delay(clock=4000000)   
....................  
....................  
.................... //#########     lecturas 
.................... int setpoint; 
.................... int posicion_real; 
.................... //#########     PID 
.................... int16 duty=0; 
.................... int Timer2,Poscaler; 
.................... float a,b,c;            //variables temporales 
.................... float t=1;              //periodo de muestreo  
.................... float e[20];           //error 
.................... float k=0;              //contrador de muestras 
.................... float u[20];            //Salidas 
.................... //#########    ganancias 
.................... float kd;               //Derivativa 
.................... float ki;               //integral 
.................... float kp;               //proporcional 
....................  
.................... void main() {  
05A2:  CLRF   FF8
05A4:  BCF    FD0.7
05A6:  MOVLW  60
05A8:  MOVWF  FD3
05AA:  MOVF   FD3,W
05AC:  CLRF   07
05AE:  CLRF   06
05B0:  CLRF   19
05B2:  CLRF   18
05B4:  CLRF   17
05B6:  MOVLW  7F
05B8:  MOVWF  16
05BA:  CLRF   6D
05BC:  CLRF   6C
05BE:  CLRF   6B
05C0:  CLRF   6A
05C2:  MOVF   FC1,W
05C4:  ANDLW  C0
05C6:  IORLW  0F
05C8:  MOVWF  FC1
05CA:  MOVLW  07
05CC:  MOVWF  FB4
....................    // Generemos una Señal cuadrada de 1 Khz 
....................    Timer2=249;    //Se carga timer 2 con 249 como lo vimos en la pagina 
05CE:  MOVLW  F9
05D0:  MOVWF  08
....................    //Preescaler=4;  //Preescaler solo puede tomar valores de: 1 - 4 - 16 
....................    //Para el preescaler colocamos "t2_div_by_4" 
....................    Poscaler=1;  //Preescaler solo puede tomar valores de: 1 
05D2:  MOVLW  01
05D4:  MOVWF  09
....................     
....................    setup_timer_2(t2_div_by_4,Timer2,Poscaler);   //Configuracion de Timer 2 para establecer frec. PWM a 1kHz 
05D6:  SUBWF  09,W
05D8:  MOVWF  01
05DA:  RLCF   01,W
05DC:  MOVWF  00
05DE:  RLCF   00,F
05E0:  RLCF   00,F
05E2:  MOVLW  F8
05E4:  ANDWF  00,F
05E6:  MOVF   00,W
05E8:  IORLW  05
05EA:  MOVWF  FCA
05EC:  MOVFF  08,FCB
....................    setup_ccp1(ccp_pwm);                //Configurar modulo CCP1 en modo PWM 
05F0:  BCF    F94.2
05F2:  BCF    F8B.2
05F4:  MOVLW  0C
05F6:  MOVWF  FBD
05F8:  CLRF   FB7
05FA:  CLRF   FB6
....................    setup_adc_ports(all_analog);        //Configurar ADC configuracion de los puertos que funcionan en analogico  
05FC:  MOVF   FC1,W
05FE:  ANDLW  C0
0600:  MOVWF  FC1
....................    setup_adc(adc_clock_internal); 
0602:  MOVF   FC0,W
0604:  ANDLW  C0
0606:  IORLW  07
0608:  MOVWF  FC0
060A:  BSF    FC0.7
060C:  BSF    FC2.0
....................    while(1){ 
....................         
....................         //muestreo 
....................             //lectura del set point 
....................                 set_adc_channel(0);            //selecciona el puesto en el que se ejecutarn las sigientes instruciones  
060E:  MOVLW  00
0610:  MOVWF  01
0612:  MOVF   FC2,W
0614:  ANDLW  C3
0616:  IORWF  01,W
0618:  MOVWF  FC2
....................                 delay_us(100);        
061A:  MOVLW  20
061C:  MOVWF  00
061E:  DECFSZ 00,F
0620:  BRA    061E
0622:  BRA    0624
0624:  NOP   
....................                 setpoint=read_adc(); 
0626:  BSF    FC2.1
0628:  BTFSC  FC2.1
062A:  BRA    0628
062C:  MOVFF  FC3,04
....................             //lectura del set point 
....................                 set_adc_channel(1);            //selecciona el puesto en el que se ejecutarn las sigientes instruciones  
0630:  MOVLW  04
0632:  MOVWF  01
0634:  MOVF   FC2,W
0636:  ANDLW  C3
0638:  IORWF  01,W
063A:  MOVWF  FC2
....................                 delay_us(100);        
063C:  MOVLW  20
063E:  MOVWF  00
0640:  DECFSZ 00,F
0642:  BRA    0640
0644:  BRA    0646
0646:  NOP   
....................                 posicion_real=read_adc(); 
0648:  BSF    FC2.1
064A:  BTFSC  FC2.1
064C:  BRA    064A
064E:  MOVFF  FC3,05
....................         //duty=read_adc();               //leer 
....................         //muestreo 
....................             e[k]=posicion_real-setpoint; 
0652:  MOVFF  6D,DC
0656:  MOVFF  6C,DB
065A:  MOVFF  6B,DA
065E:  MOVFF  6A,D9
0662:  CLRF   xE0
0664:  CLRF   xDF
0666:  CLRF   xDE
0668:  MOVLW  81
066A:  MOVWF  xDD
066C:  RCALL  0004
066E:  MOVFF  03,D8
0672:  MOVFF  02,D7
0676:  MOVFF  01,D6
067A:  MOVFF  00,D5
067E:  RCALL  00F6
0680:  MOVLW  1A
0682:  ADDWF  01,W
0684:  MOVWF  FE9
0686:  MOVLW  00
0688:  ADDWFC 02,W
068A:  MOVWF  FEA
068C:  MOVF   04,W
068E:  SUBWF  05,W
0690:  CLRF   xCE
0692:  MOVWF  xCD
0694:  BRA    012E
0696:  MOVFF  00,FEF
069A:  MOVFF  01,FEC
069E:  MOVFF  02,FEC
06A2:  MOVFF  03,FEC
....................              
....................         //calculo 
....................             a=e[k]  *( kp + (ki*t) )+( kd/t ); 
06A6:  MOVFF  6D,DC
06AA:  MOVFF  6C,DB
06AE:  MOVFF  6B,DA
06B2:  MOVFF  6A,D9
06B6:  CLRF   xE0
06B8:  CLRF   xDF
06BA:  CLRF   xDE
06BC:  MOVLW  81
06BE:  MOVWF  xDD
06C0:  RCALL  0004
06C2:  MOVFF  03,D8
06C6:  MOVFF  02,D7
06CA:  MOVFF  01,D6
06CE:  MOVFF  00,D5
06D2:  RCALL  00F6
06D4:  MOVLW  1A
06D6:  ADDWF  01,W
06D8:  MOVWF  FE9
06DA:  MOVLW  00
06DC:  ADDWFC 02,W
06DE:  MOVWF  FEA
06E0:  MOVFF  FEF,CB
06E4:  MOVFF  FEC,CC
06E8:  MOVFF  FEC,CD
06EC:  MOVFF  FEC,CE
06F0:  MOVFF  C5,DC
06F4:  MOVFF  C4,DB
06F8:  MOVFF  C3,DA
06FC:  MOVFF  C2,D9
0700:  MOVFF  19,E0
0704:  MOVFF  18,DF
0708:  MOVFF  17,DE
070C:  MOVFF  16,DD
0710:  RCALL  0004
0712:  MOVFF  FEA,D0
0716:  MOVFF  FE9,CF
071A:  BCF    FD8.1
071C:  MOVFF  C9,DA
0720:  MOVFF  C8,D9
0724:  MOVFF  C7,D8
0728:  MOVFF  C6,D7
072C:  MOVFF  03,DE
0730:  MOVFF  02,DD
0734:  MOVFF  01,DC
0738:  MOVFF  00,DB
073C:  RCALL  0166
073E:  MOVFF  D0,FEA
0742:  MOVFF  CF,FE9
0746:  MOVFF  CE,DC
074A:  MOVFF  CD,DB
074E:  MOVFF  CC,DA
0752:  MOVFF  CB,D9
0756:  MOVFF  03,E0
075A:  MOVFF  02,DF
075E:  MOVFF  01,DE
0762:  MOVFF  00,DD
0766:  RCALL  0004
0768:  MOVFF  03,CE
076C:  MOVFF  02,CD
0770:  MOVFF  01,CC
0774:  MOVFF  00,CB
0778:  MOVFF  C1,D4
077C:  MOVFF  C0,D3
0780:  MOVFF  BF,D2
0784:  MOVFF  BE,D1
0788:  MOVFF  19,D8
078C:  MOVFF  18,D7
0790:  MOVFF  17,D6
0794:  MOVFF  16,D5
0798:  RCALL  03D0
079A:  MOVFF  FEA,D2
079E:  MOVFF  FE9,D1
07A2:  BCF    FD8.1
07A4:  MOVFF  CE,DA
07A8:  MOVFF  CD,D9
07AC:  MOVFF  CC,D8
07B0:  MOVFF  CB,D7
07B4:  MOVFF  03,DE
07B8:  MOVFF  02,DD
07BC:  MOVFF  01,DC
07C0:  MOVFF  00,DB
07C4:  RCALL  0166
07C6:  MOVFF  D2,FEA
07CA:  MOVFF  D1,FE9
07CE:  MOVFF  03,0D
07D2:  MOVFF  02,0C
07D6:  MOVFF  01,0B
07DA:  MOVFF  00,0A
....................             b=e[k-1]*( (-2*(kd/t) - kp) ); 
07DE:  BSF    FD8.1
07E0:  MOVFF  6D,DA
07E4:  MOVFF  6C,D9
07E8:  MOVFF  6B,D8
07EC:  MOVFF  6A,D7
07F0:  CLRF   xDE
07F2:  CLRF   xDD
07F4:  CLRF   xDC
07F6:  MOVLW  7F
07F8:  MOVWF  xDB
07FA:  RCALL  0166
07FC:  MOVFF  03,CE
0800:  MOVFF  02,CD
0804:  MOVFF  01,CC
0808:  MOVFF  00,CB
080C:  MOVFF  03,DC
0810:  MOVFF  02,DB
0814:  MOVFF  01,DA
0818:  MOVFF  00,D9
081C:  CLRF   xE0
081E:  CLRF   xDF
0820:  CLRF   xDE
0822:  MOVLW  81
0824:  MOVWF  xDD
0826:  CALL   0004
082A:  MOVFF  03,D8
082E:  MOVFF  02,D7
0832:  MOVFF  01,D6
0836:  MOVFF  00,D5
083A:  RCALL  00F6
083C:  MOVLW  1A
083E:  ADDWF  01,W
0840:  MOVWF  FE9
0842:  MOVLW  00
0844:  ADDWFC 02,W
0846:  MOVWF  FEA
0848:  MOVFF  FEF,CB
084C:  MOVFF  FEC,CC
0850:  MOVFF  FEC,CD
0854:  MOVFF  FEC,CE
0858:  MOVFF  C1,D4
085C:  MOVFF  C0,D3
0860:  MOVFF  BF,D2
0864:  MOVFF  BE,D1
0868:  MOVFF  19,D8
086C:  MOVFF  18,D7
0870:  MOVFF  17,D6
0874:  MOVFF  16,D5
0878:  RCALL  03D0
087A:  CLRF   xDC
087C:  CLRF   xDB
087E:  MOVLW  80
0880:  MOVWF  xDA
0882:  MOVWF  xD9
0884:  MOVFF  03,E0
0888:  MOVFF  02,DF
088C:  MOVFF  01,DE
0890:  MOVFF  00,DD
0894:  CALL   0004
0898:  MOVFF  03,D2
089C:  MOVFF  02,D1
08A0:  MOVFF  01,D0
08A4:  MOVFF  00,CF
08A8:  MOVFF  FEA,D4
08AC:  MOVFF  FE9,D3
08B0:  BSF    FD8.1
08B2:  MOVFF  03,DA
08B6:  MOVFF  02,D9
08BA:  MOVFF  01,D8
08BE:  MOVFF  00,D7
08C2:  MOVFF  C9,DE
08C6:  MOVFF  C8,DD
08CA:  MOVFF  C7,DC
08CE:  MOVFF  C6,DB
08D2:  RCALL  0166
08D4:  MOVFF  D4,FEA
08D8:  MOVFF  D3,FE9
08DC:  MOVFF  CE,DC
08E0:  MOVFF  CD,DB
08E4:  MOVFF  CC,DA
08E8:  MOVFF  CB,D9
08EC:  MOVFF  03,E0
08F0:  MOVFF  02,DF
08F4:  MOVFF  01,DE
08F8:  MOVFF  00,DD
08FC:  CALL   0004
0900:  MOVFF  03,11
0904:  MOVFF  02,10
0908:  MOVFF  01,0F
090C:  MOVFF  00,0E
....................             c=e[k-2]*( (kd/t) +u[k-1] ); 
0910:  BSF    FD8.1
0912:  MOVFF  6D,DA
0916:  MOVFF  6C,D9
091A:  MOVFF  6B,D8
091E:  MOVFF  6A,D7
0922:  CLRF   xDE
0924:  CLRF   xDD
0926:  CLRF   xDC
0928:  MOVLW  80
092A:  MOVWF  xDB
092C:  RCALL  0166
092E:  MOVFF  03,CE
0932:  MOVFF  02,CD
0936:  MOVFF  01,CC
093A:  MOVFF  00,CB
093E:  MOVFF  03,DC
0942:  MOVFF  02,DB
0946:  MOVFF  01,DA
094A:  MOVFF  00,D9
094E:  CLRF   xE0
0950:  CLRF   xDF
0952:  CLRF   xDE
0954:  MOVLW  81
0956:  MOVWF  xDD
0958:  CALL   0004
095C:  MOVFF  03,D8
0960:  MOVFF  02,D7
0964:  MOVFF  01,D6
0968:  MOVFF  00,D5
096C:  CALL   00F6
0970:  MOVLW  1A
0972:  ADDWF  01,W
0974:  MOVWF  FE9
0976:  MOVLW  00
0978:  ADDWFC 02,W
097A:  MOVWF  FEA
097C:  MOVFF  FEF,CB
0980:  MOVFF  FEC,CC
0984:  MOVFF  FEC,CD
0988:  MOVFF  FEC,CE
098C:  MOVFF  C1,D4
0990:  MOVFF  C0,D3
0994:  MOVFF  BF,D2
0998:  MOVFF  BE,D1
099C:  MOVFF  19,D8
09A0:  MOVFF  18,D7
09A4:  MOVFF  17,D6
09A8:  MOVFF  16,D5
09AC:  RCALL  03D0
09AE:  MOVFF  03,D2
09B2:  MOVFF  02,D1
09B6:  MOVFF  01,D0
09BA:  MOVFF  00,CF
09BE:  MOVFF  FEA,D4
09C2:  MOVFF  FE9,D3
09C6:  BSF    FD8.1
09C8:  MOVFF  6D,DA
09CC:  MOVFF  6C,D9
09D0:  MOVFF  6B,D8
09D4:  MOVFF  6A,D7
09D8:  CLRF   xDE
09DA:  CLRF   xDD
09DC:  CLRF   xDC
09DE:  MOVLW  7F
09E0:  MOVWF  xDB
09E2:  CALL   0166
09E6:  MOVFF  D4,FEA
09EA:  MOVFF  D3,FE9
09EE:  MOVFF  03,D8
09F2:  MOVFF  02,D7
09F6:  MOVFF  01,D6
09FA:  MOVFF  00,D5
09FE:  MOVFF  03,DC
0A02:  MOVFF  02,DB
0A06:  MOVFF  01,DA
0A0A:  MOVFF  00,D9
0A0E:  CLRF   xE0
0A10:  CLRF   xDF
0A12:  CLRF   xDE
0A14:  MOVLW  81
0A16:  MOVWF  xDD
0A18:  CALL   0004
0A1C:  MOVFF  03,D8
0A20:  MOVFF  02,D7
0A24:  MOVFF  01,D6
0A28:  MOVFF  00,D5
0A2C:  CALL   00F6
0A30:  MOVLW  6E
0A32:  ADDWF  01,W
0A34:  MOVWF  FE9
0A36:  MOVLW  00
0A38:  ADDWFC 02,W
0A3A:  MOVWF  FEA
0A3C:  MOVFF  FEF,00
0A40:  MOVFF  FEC,01
0A44:  MOVFF  FEC,02
0A48:  MOVFF  FEC,03
0A4C:  MOVFF  FEA,D6
0A50:  MOVFF  FE9,D5
0A54:  BCF    FD8.1
0A56:  MOVFF  D2,DA
0A5A:  MOVFF  D1,D9
0A5E:  MOVFF  D0,D8
0A62:  MOVFF  CF,D7
0A66:  MOVFF  03,DE
0A6A:  MOVFF  02,DD
0A6E:  MOVFF  01,DC
0A72:  MOVFF  00,DB
0A76:  CALL   0166
0A7A:  MOVFF  D6,FEA
0A7E:  MOVFF  D5,FE9
0A82:  MOVFF  CE,DC
0A86:  MOVFF  CD,DB
0A8A:  MOVFF  CC,DA
0A8E:  MOVFF  CB,D9
0A92:  MOVFF  03,E0
0A96:  MOVFF  02,DF
0A9A:  MOVFF  01,DE
0A9E:  MOVFF  00,DD
0AA2:  CALL   0004
0AA6:  MOVFF  03,15
0AAA:  MOVFF  02,14
0AAE:  MOVFF  01,13
0AB2:  MOVFF  00,12
....................             u[k]=a+b+c; 
0AB6:  MOVFF  6D,DC
0ABA:  MOVFF  6C,DB
0ABE:  MOVFF  6B,DA
0AC2:  MOVFF  6A,D9
0AC6:  CLRF   xE0
0AC8:  CLRF   xDF
0ACA:  CLRF   xDE
0ACC:  MOVLW  81
0ACE:  MOVWF  xDD
0AD0:  CALL   0004
0AD4:  MOVFF  03,D8
0AD8:  MOVFF  02,D7
0ADC:  MOVFF  01,D6
0AE0:  MOVFF  00,D5
0AE4:  CALL   00F6
0AE8:  MOVLW  6E
0AEA:  ADDWF  01,W
0AEC:  MOVWF  FE9
0AEE:  MOVLW  00
0AF0:  ADDWFC 02,W
0AF2:  MOVWF  FEA
0AF4:  MOVFF  FEA,CE
0AF8:  MOVFF  FE9,CD
0AFC:  BCF    FD8.1
0AFE:  MOVFF  0D,DA
0B02:  MOVFF  0C,D9
0B06:  MOVFF  0B,D8
0B0A:  MOVFF  0A,D7
0B0E:  MOVFF  11,DE
0B12:  MOVFF  10,DD
0B16:  MOVFF  0F,DC
0B1A:  MOVFF  0E,DB
0B1E:  CALL   0166
0B22:  MOVFF  CE,FEA
0B26:  MOVFF  CD,FE9
0B2A:  MOVFF  03,D2
0B2E:  MOVFF  02,D1
0B32:  MOVFF  01,D0
0B36:  MOVFF  00,CF
0B3A:  MOVFF  FEA,D4
0B3E:  MOVFF  FE9,D3
0B42:  BCF    FD8.1
0B44:  MOVFF  03,DA
0B48:  MOVFF  02,D9
0B4C:  MOVFF  01,D8
0B50:  MOVFF  00,D7
0B54:  MOVFF  15,DE
0B58:  MOVFF  14,DD
0B5C:  MOVFF  13,DC
0B60:  MOVFF  12,DB
0B64:  CALL   0166
0B68:  MOVFF  D4,FEA
0B6C:  MOVFF  D3,FE9
0B70:  MOVFF  00,FEF
0B74:  MOVFF  01,FEC
0B78:  MOVFF  02,FEC
0B7C:  MOVFF  03,FEC
....................         //incremento en contrador  
....................             k=k+1; 
0B80:  BCF    FD8.1
0B82:  MOVFF  6D,DA
0B86:  MOVFF  6C,D9
0B8A:  MOVFF  6B,D8
0B8E:  MOVFF  6A,D7
0B92:  CLRF   xDE
0B94:  CLRF   xDD
0B96:  CLRF   xDC
0B98:  MOVLW  7F
0B9A:  MOVWF  xDB
0B9C:  CALL   0166
0BA0:  MOVFF  03,6D
0BA4:  MOVFF  02,6C
0BA8:  MOVFF  01,6B
0BAC:  MOVFF  00,6A
....................                      
....................         //salidas  
....................             set_pwm1_duty( u[k]);           //write salida 
0BB0:  MOVFF  6D,DC
0BB4:  MOVFF  6C,DB
0BB8:  MOVFF  6B,DA
0BBC:  MOVFF  6A,D9
0BC0:  CLRF   xE0
0BC2:  CLRF   xDF
0BC4:  CLRF   xDE
0BC6:  MOVLW  81
0BC8:  MOVWF  xDD
0BCA:  CALL   0004
0BCE:  MOVFF  03,D8
0BD2:  MOVFF  02,D7
0BD6:  MOVFF  01,D6
0BDA:  MOVFF  00,D5
0BDE:  CALL   00F6
0BE2:  MOVLW  6E
0BE4:  ADDWF  01,W
0BE6:  MOVWF  FE9
0BE8:  MOVLW  00
0BEA:  ADDWFC 02,W
0BEC:  MOVWF  FEA
0BEE:  MOVFF  FEF,CB
0BF2:  MOVFF  FEC,CC
0BF6:  MOVFF  FEC,CD
0BFA:  MOVFF  FEC,CE
0BFE:  RRCF   xCC,F
0C00:  RRCF   xCB,F
0C02:  RRCF   xCC,F
0C04:  RRCF   xCB,F
0C06:  RRCF   xCC,F
0C08:  MOVFF  CB,FBE
0C0C:  RRCF   xCC,F
0C0E:  RRCF   xCC,W
0C10:  ANDLW  30
0C12:  MOVWF  00
0C14:  MOVF   FBD,W
0C16:  ANDLW  CF
0C18:  IORWF  00,W
0C1A:  MOVWF  FBD
....................         //protecion contra desvordamiento de variables  
....................         if(k>=20){ 
0C1C:  CLRF   xCE
0C1E:  CLRF   xCD
0C20:  MOVLW  20
0C22:  MOVWF  xCC
0C24:  MOVLW  83
0C26:  MOVWF  xCB
0C28:  MOVFF  6D,D2
0C2C:  MOVFF  6C,D1
0C30:  MOVFF  6B,D0
0C34:  MOVFF  6A,CF
0C38:  BRA    052A
0C3A:  BC    0C3E
0C3C:  BNZ   0C6C
....................             k=0;  
0C3E:  CLRF   6D
0C40:  CLRF   6C
0C42:  CLRF   6B
0C44:  CLRF   6A
....................             for (int i = 0; i <20; i++){ 
0C46:  CLRF   xCA
0C48:  MOVF   xCA,W
0C4A:  SUBLW  13
0C4C:  BNC   0C6C
....................                 e[i]=0; 
0C4E:  MOVF   xCA,W
0C50:  MULLW  04
0C52:  MOVF   FF3,W
0C54:  CLRF   03
0C56:  ADDLW  1A
0C58:  MOVWF  FE9
0C5A:  MOVLW  00
0C5C:  ADDWFC 03,W
0C5E:  MOVWF  FEA
0C60:  CLRF   FEF
0C62:  CLRF   FEC
0C64:  CLRF   FEC
0C66:  CLRF   FEC
0C68:  INCF   xCA,F
0C6A:  BRA    0C48
....................             } 
....................              
....................         } 
0C6C:  BRA    060E
....................    } 
.................... } 
0C6E:  SLEEP 

Configuration Fuses:
   Word  1: C800   INTRC_IO FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV21 NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
